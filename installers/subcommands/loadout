#!/bin/bash
function get_params {
  while [[ $# -gt 0 ]];
  do
    case $1 in
    *)
      exit 1
    ;;
    esac
    shift
  done
}

function main {
  kubectl create namespace quake-system &> /dev/null
  kubectl apply -n quake-system -f https://raw.githubusercontent.com/argoproj/argo-rollouts/stable/manifests/install.yaml
  local INDEX=0
  while true; do
    REPO_URL=$(yq r ${REPO_ROOT}/helm-templates/helm-sources.yml "QUAKE_HELM_SOURCES.${INDEX}.url")
    REPO_NAME=$(yq r ${REPO_ROOT}/helm-templates/helm-sources.yml "QUAKE_HELM_SOURCES.${INDEX}.name")
    if [[ "${REPO_NAME}" == "null" ]]; then
      break
    fi
    echo "helm repo add ${REPO_NAME} ${REPO_URL}"
    helm repo add "${REPO_NAME}" "${REPO_URL}"
    ((INDEX+=1))
  done
  helm repo update
  local INDEX=0
  while true; do
    INSTALL_NAME=$(yq r ${REPO_ROOT}/helm-templates/helm-sources.yml "QUAKE_HELM_INSTALL_CHARTS.${INDEX}.name")
    local CHART_VERSION=$(yq r ${REPO_ROOT}/helm-templates/helm-sources.yml "QUAKE_HELM_INSTALL_CHARTS.${INDEX}.version")
    if [[ "${INSTALL_NAME}" == "null" ]]; then
      break
    fi
    
    local CHART_NAME=$(echo ${INSTALL_NAME} | sed 's#.*/##')
    local HELM_STATE=${REPO_ROOT}/state/helm/${QUAKE_CLUSTER_NAME}.${QUAKE_TLD}
    mkdir -p ${HELM_STATE} &> /dev/null
    yq r <( kops toolbox template \
      --template helm-templates/helm-values-template.yml \
      --values ${REPO_ROOT}/state/kops/vars-${QUAKE_CLUSTER_NAME}.${QUAKE_TLD}.yml \
    ) ${CHART} > ${HELM_STATE}/${CHART}-values.yml
    helm upgrade --wait --install "quake-${CHART_NAME}" "${INSTALL_NAME}" \
      --values ${HELM_STATE}/${CHART_NAME}-values.yml \
      --version ${CHART_VERSION} \
      --namespace quake-system 
    ((INDEX+=1))
  done
}
